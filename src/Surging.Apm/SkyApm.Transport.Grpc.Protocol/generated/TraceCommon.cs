// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common/trace-common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SkyWalking.NetworkProtocol {

  /// <summary>Holder for reflection information generated from common/trace-common.proto</summary>
  public static partial class TraceCommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common/trace-common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TraceCommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chljb21tb24vdHJhY2UtY29tbW9uLnByb3RvIkUKD1Vwc3RyZWFtU2VnbWVu",
            "dBIhCg5nbG9iYWxUcmFjZUlkcxgBIAMoCzIJLlVuaXF1ZUlkEg8KB3NlZ21l",
            "bnQYAiABKAwiGwoIVW5pcXVlSWQSDwoHaWRQYXJ0cxgBIAMoAyoqCghTcGFu",
            "VHlwZRIJCgVFbnRyeRAAEggKBEV4aXQQARIJCgVMb2NhbBACKiwKB1JlZlR5",
            "cGUSEAoMQ3Jvc3NQcm9jZXNzEAASDwoLQ3Jvc3NUaHJlYWQQASpVCglTcGFu",
            "TGF5ZXISCwoHVW5rbm93bhAAEgwKCERhdGFiYXNlEAESEAoMUlBDRnJhbWV3",
            "b3JrEAISCAoESHR0cBADEgYKAk1REAQSCQoFQ2FjaGUQBUJRCjBvcmcuYXBh",
            "Y2hlLnNreXdhbGtpbmcuYXBtLm5ldHdvcmsubGFuZ3VhZ2UuYWdlbnRQAaoC",
            "GlNreVdhbGtpbmcuTmV0d29ya1Byb3RvY29sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SkyWalking.NetworkProtocol.SpanType), typeof(global::SkyWalking.NetworkProtocol.RefType), typeof(global::SkyWalking.NetworkProtocol.SpanLayer), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.UpstreamSegment), global::SkyWalking.NetworkProtocol.UpstreamSegment.Parser, new[]{ "GlobalTraceIds", "Segment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.UniqueId), global::SkyWalking.NetworkProtocol.UniqueId.Parser, new[]{ "IdParts" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum SpanType {
    [pbr::OriginalName("Entry")] Entry = 0,
    [pbr::OriginalName("Exit")] Exit = 1,
    [pbr::OriginalName("Local")] Local = 2,
  }

  public enum RefType {
    [pbr::OriginalName("CrossProcess")] CrossProcess = 0,
    [pbr::OriginalName("CrossThread")] CrossThread = 1,
  }

  public enum SpanLayer {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("Database")] Database = 1,
    [pbr::OriginalName("RPCFramework")] Rpcframework = 2,
    [pbr::OriginalName("Http")] Http = 3,
    [pbr::OriginalName("MQ")] Mq = 4,
    [pbr::OriginalName("Cache")] Cache = 5,
  }

  #endregion

  #region Messages
  public sealed partial class UpstreamSegment : pb::IMessage<UpstreamSegment> {
    private static readonly pb::MessageParser<UpstreamSegment> _parser = new pb::MessageParser<UpstreamSegment>(() => new UpstreamSegment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpstreamSegment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.TraceCommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpstreamSegment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpstreamSegment(UpstreamSegment other) : this() {
      globalTraceIds_ = other.globalTraceIds_.Clone();
      segment_ = other.segment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpstreamSegment Clone() {
      return new UpstreamSegment(this);
    }

    /// <summary>Field number for the "globalTraceIds" field.</summary>
    public const int GlobalTraceIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.UniqueId> _repeated_globalTraceIds_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.UniqueId.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.UniqueId> globalTraceIds_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.UniqueId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.UniqueId> GlobalTraceIds {
      get { return globalTraceIds_; }
    }

    /// <summary>Field number for the "segment" field.</summary>
    public const int SegmentFieldNumber = 2;
    private pb::ByteString segment_ = pb::ByteString.Empty;
    /// <summary>
    /// the byte array of TraceSegmentObject
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Segment {
      get { return segment_; }
      set {
        segment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpstreamSegment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpstreamSegment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!globalTraceIds_.Equals(other.globalTraceIds_)) return false;
      if (Segment != other.Segment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= globalTraceIds_.GetHashCode();
      if (Segment.Length != 0) hash ^= Segment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      globalTraceIds_.WriteTo(output, _repeated_globalTraceIds_codec);
      if (Segment.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Segment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += globalTraceIds_.CalculateSize(_repeated_globalTraceIds_codec);
      if (Segment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Segment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpstreamSegment other) {
      if (other == null) {
        return;
      }
      globalTraceIds_.Add(other.globalTraceIds_);
      if (other.Segment.Length != 0) {
        Segment = other.Segment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            globalTraceIds_.AddEntriesFrom(input, _repeated_globalTraceIds_codec);
            break;
          }
          case 18: {
            Segment = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UniqueId : pb::IMessage<UniqueId> {
    private static readonly pb::MessageParser<UniqueId> _parser = new pb::MessageParser<UniqueId>(() => new UniqueId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UniqueId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.TraceCommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueId(UniqueId other) : this() {
      idParts_ = other.idParts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UniqueId Clone() {
      return new UniqueId(this);
    }

    /// <summary>Field number for the "idParts" field.</summary>
    public const int IdPartsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_idParts_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> idParts_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> IdParts {
      get { return idParts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UniqueId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UniqueId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!idParts_.Equals(other.idParts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= idParts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      idParts_.WriteTo(output, _repeated_idParts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += idParts_.CalculateSize(_repeated_idParts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UniqueId other) {
      if (other == null) {
        return;
      }
      idParts_.Add(other.idParts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            idParts_.AddEntriesFrom(input, _repeated_idParts_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
