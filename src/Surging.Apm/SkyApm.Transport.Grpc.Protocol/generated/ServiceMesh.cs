// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service-mesh-probe/service-mesh.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from service-mesh-probe/service-mesh.proto</summary>
public static partial class ServiceMeshReflection {

  #region Descriptor
  /// <summary>File descriptor for service-mesh-probe/service-mesh.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ServiceMeshReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiVzZXJ2aWNlLW1lc2gtcHJvYmUvc2VydmljZS1tZXNoLnByb3RvGhNjb21t",
          "b24vY29tbW9uLnByb3RvIqADChFTZXJ2aWNlTWVzaE1ldHJpYxIRCglzdGFy",
          "dFRpbWUYASABKAMSDwoHZW5kVGltZRgCIAEoAxIZChFzb3VyY2VTZXJ2aWNl",
          "TmFtZRgDIAEoCRIXCg9zb3VyY2VTZXJ2aWNlSWQYBCABKAUSHQoVc291cmNl",
          "U2VydmljZUluc3RhbmNlGAUgASgJEh8KF3NvdXJjZVNlcnZpY2VJbnN0YW5j",
          "ZUlkGAYgASgFEhcKD2Rlc3RTZXJ2aWNlTmFtZRgHIAEoCRIVCg1kZXN0U2Vy",
          "dmljZUlkGAggASgFEhsKE2Rlc3RTZXJ2aWNlSW5zdGFuY2UYCSABKAkSHQoV",
          "ZGVzdFNlcnZpY2VJbnN0YW5jZUlkGAogASgFEhAKCGVuZHBvaW50GAsgASgJ",
          "Eg8KB2xhdGVuY3kYDCABKAUSFAoMcmVzcG9uc2VDb2RlGA0gASgFEg4KBnN0",
          "YXR1cxgOIAEoCBIbCghwcm90b2NvbBgPIAEoDjIJLlByb3RvY29sEiEKC2Rl",
          "dGVjdFBvaW50GBAgASgOMgwuRGV0ZWN0UG9pbnQiFQoTTWVzaFByb2JlRG93",
          "bnN0cmVhbSoeCghQcm90b2NvbBIICgRIVFRQEAASCAoEZ1JQQxABMlMKGFNl",
          "cnZpY2VNZXNoTWV0cmljU2VydmljZRI3Cgdjb2xsZWN0EhIuU2VydmljZU1l",
          "c2hNZXRyaWMaFC5NZXNoUHJvYmVEb3duc3RyZWFtIgAoAUIxCi1vcmcuYXBh",
          "Y2hlLnNreXdhbGtpbmcuYXBtLm5ldHdvcmsuc2VydmljZW1lc2hQAWIGcHJv",
          "dG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SkyWalking.NetworkProtocol.CommonReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Protocol), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ServiceMeshMetric), global::ServiceMeshMetric.Parser, new[]{ "StartTime", "EndTime", "SourceServiceName", "SourceServiceId", "SourceServiceInstance", "SourceServiceInstanceId", "DestServiceName", "DestServiceId", "DestServiceInstance", "DestServiceInstanceId", "Endpoint", "Latency", "ResponseCode", "Status", "Protocol", "DetectPoint" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MeshProbeDownstream), global::MeshProbeDownstream.Parser, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum Protocol {
  [pbr::OriginalName("HTTP")] Http = 0,
  [pbr::OriginalName("gRPC")] GRpc = 1,
}

#endregion

#region Messages
public sealed partial class ServiceMeshMetric : pb::IMessage<ServiceMeshMetric> {
  private static readonly pb::MessageParser<ServiceMeshMetric> _parser = new pb::MessageParser<ServiceMeshMetric>(() => new ServiceMeshMetric());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServiceMeshMetric> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServiceMeshReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServiceMeshMetric() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServiceMeshMetric(ServiceMeshMetric other) : this() {
    startTime_ = other.startTime_;
    endTime_ = other.endTime_;
    sourceServiceName_ = other.sourceServiceName_;
    sourceServiceId_ = other.sourceServiceId_;
    sourceServiceInstance_ = other.sourceServiceInstance_;
    sourceServiceInstanceId_ = other.sourceServiceInstanceId_;
    destServiceName_ = other.destServiceName_;
    destServiceId_ = other.destServiceId_;
    destServiceInstance_ = other.destServiceInstance_;
    destServiceInstanceId_ = other.destServiceInstanceId_;
    endpoint_ = other.endpoint_;
    latency_ = other.latency_;
    responseCode_ = other.responseCode_;
    status_ = other.status_;
    protocol_ = other.protocol_;
    detectPoint_ = other.detectPoint_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServiceMeshMetric Clone() {
    return new ServiceMeshMetric(this);
  }

  /// <summary>Field number for the "startTime" field.</summary>
  public const int StartTimeFieldNumber = 1;
  private long startTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long StartTime {
    get { return startTime_; }
    set {
      startTime_ = value;
    }
  }

  /// <summary>Field number for the "endTime" field.</summary>
  public const int EndTimeFieldNumber = 2;
  private long endTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long EndTime {
    get { return endTime_; }
    set {
      endTime_ = value;
    }
  }

  /// <summary>Field number for the "sourceServiceName" field.</summary>
  public const int SourceServiceNameFieldNumber = 3;
  private string sourceServiceName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SourceServiceName {
    get { return sourceServiceName_; }
    set {
      sourceServiceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sourceServiceId" field.</summary>
  public const int SourceServiceIdFieldNumber = 4;
  private int sourceServiceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SourceServiceId {
    get { return sourceServiceId_; }
    set {
      sourceServiceId_ = value;
    }
  }

  /// <summary>Field number for the "sourceServiceInstance" field.</summary>
  public const int SourceServiceInstanceFieldNumber = 5;
  private string sourceServiceInstance_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SourceServiceInstance {
    get { return sourceServiceInstance_; }
    set {
      sourceServiceInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sourceServiceInstanceId" field.</summary>
  public const int SourceServiceInstanceIdFieldNumber = 6;
  private int sourceServiceInstanceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SourceServiceInstanceId {
    get { return sourceServiceInstanceId_; }
    set {
      sourceServiceInstanceId_ = value;
    }
  }

  /// <summary>Field number for the "destServiceName" field.</summary>
  public const int DestServiceNameFieldNumber = 7;
  private string destServiceName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DestServiceName {
    get { return destServiceName_; }
    set {
      destServiceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "destServiceId" field.</summary>
  public const int DestServiceIdFieldNumber = 8;
  private int destServiceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DestServiceId {
    get { return destServiceId_; }
    set {
      destServiceId_ = value;
    }
  }

  /// <summary>Field number for the "destServiceInstance" field.</summary>
  public const int DestServiceInstanceFieldNumber = 9;
  private string destServiceInstance_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DestServiceInstance {
    get { return destServiceInstance_; }
    set {
      destServiceInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "destServiceInstanceId" field.</summary>
  public const int DestServiceInstanceIdFieldNumber = 10;
  private int destServiceInstanceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int DestServiceInstanceId {
    get { return destServiceInstanceId_; }
    set {
      destServiceInstanceId_ = value;
    }
  }

  /// <summary>Field number for the "endpoint" field.</summary>
  public const int EndpointFieldNumber = 11;
  private string endpoint_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Endpoint {
    get { return endpoint_; }
    set {
      endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "latency" field.</summary>
  public const int LatencyFieldNumber = 12;
  private int latency_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Latency {
    get { return latency_; }
    set {
      latency_ = value;
    }
  }

  /// <summary>Field number for the "responseCode" field.</summary>
  public const int ResponseCodeFieldNumber = 13;
  private int responseCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResponseCode {
    get { return responseCode_; }
    set {
      responseCode_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 14;
  private bool status_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "protocol" field.</summary>
  public const int ProtocolFieldNumber = 15;
  private global::Protocol protocol_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Protocol Protocol {
    get { return protocol_; }
    set {
      protocol_ = value;
    }
  }

  /// <summary>Field number for the "detectPoint" field.</summary>
  public const int DetectPointFieldNumber = 16;
  private global::SkyWalking.NetworkProtocol.DetectPoint detectPoint_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SkyWalking.NetworkProtocol.DetectPoint DetectPoint {
    get { return detectPoint_; }
    set {
      detectPoint_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServiceMeshMetric);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServiceMeshMetric other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StartTime != other.StartTime) return false;
    if (EndTime != other.EndTime) return false;
    if (SourceServiceName != other.SourceServiceName) return false;
    if (SourceServiceId != other.SourceServiceId) return false;
    if (SourceServiceInstance != other.SourceServiceInstance) return false;
    if (SourceServiceInstanceId != other.SourceServiceInstanceId) return false;
    if (DestServiceName != other.DestServiceName) return false;
    if (DestServiceId != other.DestServiceId) return false;
    if (DestServiceInstance != other.DestServiceInstance) return false;
    if (DestServiceInstanceId != other.DestServiceInstanceId) return false;
    if (Endpoint != other.Endpoint) return false;
    if (Latency != other.Latency) return false;
    if (ResponseCode != other.ResponseCode) return false;
    if (Status != other.Status) return false;
    if (Protocol != other.Protocol) return false;
    if (DetectPoint != other.DetectPoint) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StartTime != 0L) hash ^= StartTime.GetHashCode();
    if (EndTime != 0L) hash ^= EndTime.GetHashCode();
    if (SourceServiceName.Length != 0) hash ^= SourceServiceName.GetHashCode();
    if (SourceServiceId != 0) hash ^= SourceServiceId.GetHashCode();
    if (SourceServiceInstance.Length != 0) hash ^= SourceServiceInstance.GetHashCode();
    if (SourceServiceInstanceId != 0) hash ^= SourceServiceInstanceId.GetHashCode();
    if (DestServiceName.Length != 0) hash ^= DestServiceName.GetHashCode();
    if (DestServiceId != 0) hash ^= DestServiceId.GetHashCode();
    if (DestServiceInstance.Length != 0) hash ^= DestServiceInstance.GetHashCode();
    if (DestServiceInstanceId != 0) hash ^= DestServiceInstanceId.GetHashCode();
    if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
    if (Latency != 0) hash ^= Latency.GetHashCode();
    if (ResponseCode != 0) hash ^= ResponseCode.GetHashCode();
    if (Status != false) hash ^= Status.GetHashCode();
    if (Protocol != 0) hash ^= Protocol.GetHashCode();
    if (DetectPoint != 0) hash ^= DetectPoint.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (StartTime != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(StartTime);
    }
    if (EndTime != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(EndTime);
    }
    if (SourceServiceName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(SourceServiceName);
    }
    if (SourceServiceId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(SourceServiceId);
    }
    if (SourceServiceInstance.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(SourceServiceInstance);
    }
    if (SourceServiceInstanceId != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(SourceServiceInstanceId);
    }
    if (DestServiceName.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(DestServiceName);
    }
    if (DestServiceId != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(DestServiceId);
    }
    if (DestServiceInstance.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(DestServiceInstance);
    }
    if (DestServiceInstanceId != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(DestServiceInstanceId);
    }
    if (Endpoint.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Endpoint);
    }
    if (Latency != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(Latency);
    }
    if (ResponseCode != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(ResponseCode);
    }
    if (Status != false) {
      output.WriteRawTag(112);
      output.WriteBool(Status);
    }
    if (Protocol != 0) {
      output.WriteRawTag(120);
      output.WriteEnum((int) Protocol);
    }
    if (DetectPoint != 0) {
      output.WriteRawTag(128, 1);
      output.WriteEnum((int) DetectPoint);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StartTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
    }
    if (EndTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
    }
    if (SourceServiceName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceServiceName);
    }
    if (SourceServiceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SourceServiceId);
    }
    if (SourceServiceInstance.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceServiceInstance);
    }
    if (SourceServiceInstanceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SourceServiceInstanceId);
    }
    if (DestServiceName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DestServiceName);
    }
    if (DestServiceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DestServiceId);
    }
    if (DestServiceInstance.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DestServiceInstance);
    }
    if (DestServiceInstanceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DestServiceInstanceId);
    }
    if (Endpoint.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
    }
    if (Latency != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Latency);
    }
    if (ResponseCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResponseCode);
    }
    if (Status != false) {
      size += 1 + 1;
    }
    if (Protocol != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
    }
    if (DetectPoint != 0) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DetectPoint);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServiceMeshMetric other) {
    if (other == null) {
      return;
    }
    if (other.StartTime != 0L) {
      StartTime = other.StartTime;
    }
    if (other.EndTime != 0L) {
      EndTime = other.EndTime;
    }
    if (other.SourceServiceName.Length != 0) {
      SourceServiceName = other.SourceServiceName;
    }
    if (other.SourceServiceId != 0) {
      SourceServiceId = other.SourceServiceId;
    }
    if (other.SourceServiceInstance.Length != 0) {
      SourceServiceInstance = other.SourceServiceInstance;
    }
    if (other.SourceServiceInstanceId != 0) {
      SourceServiceInstanceId = other.SourceServiceInstanceId;
    }
    if (other.DestServiceName.Length != 0) {
      DestServiceName = other.DestServiceName;
    }
    if (other.DestServiceId != 0) {
      DestServiceId = other.DestServiceId;
    }
    if (other.DestServiceInstance.Length != 0) {
      DestServiceInstance = other.DestServiceInstance;
    }
    if (other.DestServiceInstanceId != 0) {
      DestServiceInstanceId = other.DestServiceInstanceId;
    }
    if (other.Endpoint.Length != 0) {
      Endpoint = other.Endpoint;
    }
    if (other.Latency != 0) {
      Latency = other.Latency;
    }
    if (other.ResponseCode != 0) {
      ResponseCode = other.ResponseCode;
    }
    if (other.Status != false) {
      Status = other.Status;
    }
    if (other.Protocol != 0) {
      Protocol = other.Protocol;
    }
    if (other.DetectPoint != 0) {
      DetectPoint = other.DetectPoint;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StartTime = input.ReadInt64();
          break;
        }
        case 16: {
          EndTime = input.ReadInt64();
          break;
        }
        case 26: {
          SourceServiceName = input.ReadString();
          break;
        }
        case 32: {
          SourceServiceId = input.ReadInt32();
          break;
        }
        case 42: {
          SourceServiceInstance = input.ReadString();
          break;
        }
        case 48: {
          SourceServiceInstanceId = input.ReadInt32();
          break;
        }
        case 58: {
          DestServiceName = input.ReadString();
          break;
        }
        case 64: {
          DestServiceId = input.ReadInt32();
          break;
        }
        case 74: {
          DestServiceInstance = input.ReadString();
          break;
        }
        case 80: {
          DestServiceInstanceId = input.ReadInt32();
          break;
        }
        case 90: {
          Endpoint = input.ReadString();
          break;
        }
        case 96: {
          Latency = input.ReadInt32();
          break;
        }
        case 104: {
          ResponseCode = input.ReadInt32();
          break;
        }
        case 112: {
          Status = input.ReadBool();
          break;
        }
        case 120: {
          Protocol = (global::Protocol) input.ReadEnum();
          break;
        }
        case 128: {
          DetectPoint = (global::SkyWalking.NetworkProtocol.DetectPoint) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class MeshProbeDownstream : pb::IMessage<MeshProbeDownstream> {
  private static readonly pb::MessageParser<MeshProbeDownstream> _parser = new pb::MessageParser<MeshProbeDownstream>(() => new MeshProbeDownstream());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MeshProbeDownstream> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServiceMeshReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshProbeDownstream() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshProbeDownstream(MeshProbeDownstream other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshProbeDownstream Clone() {
    return new MeshProbeDownstream(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MeshProbeDownstream);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MeshProbeDownstream other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MeshProbeDownstream other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

#endregion


#endregion Designer generated code
