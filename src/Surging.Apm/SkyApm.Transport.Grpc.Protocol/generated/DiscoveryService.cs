// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: language-agent/DiscoveryService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SkyWalking.NetworkProtocol {

  /// <summary>Holder for reflection information generated from language-agent/DiscoveryService.proto</summary>
  public static partial class DiscoveryServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for language-agent/DiscoveryService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DiscoveryServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVsYW5ndWFnZS1hZ2VudC9EaXNjb3ZlcnlTZXJ2aWNlLnByb3RvGh9sYW5n",
            "dWFnZS1hZ2VudC9Eb3duc3RyZWFtLnByb3RvGhljb21tb24vdHJhY2UtY29t",
            "bW9uLnByb3RvIm4KE0FwcGxpY2F0aW9uSW5zdGFuY2USFQoNYXBwbGljYXRp",
            "b25JZBgBIAEoBRIRCglhZ2VudFVVSUQYAiABKAkSFAoMcmVnaXN0ZXJUaW1l",
            "GAMgASgDEhcKBm9zaW5mbxgEIAEoCzIHLk9TSW5mbyJSChpBcHBsaWNhdGlv",
            "bkluc3RhbmNlTWFwcGluZxIVCg1hcHBsaWNhdGlvbklkGAEgASgFEh0KFWFw",
            "cGxpY2F0aW9uSW5zdGFuY2VJZBgCIAEoBSKBAQoaQXBwbGljYXRpb25JbnN0",
            "YW5jZVJlY292ZXISFQoNYXBwbGljYXRpb25JZBgBIAEoBRIdChVhcHBsaWNh",
            "dGlvbkluc3RhbmNlSWQYAiABKAUSFAoMcmVnaXN0ZXJUaW1lGAMgASgDEhcK",
            "Bm9zaW5mbxgEIAEoCzIHLk9TSW5mbyJUChxBcHBsaWNhdGlvbkluc3RhbmNl",
            "SGVhcnRiZWF0Eh0KFWFwcGxpY2F0aW9uSW5zdGFuY2VJZBgBIAEoBRIVCg1o",
            "ZWFydGJlYXRUaW1lGAIgASgDIkwKBk9TSW5mbxIOCgZvc05hbWUYASABKAkS",
            "EAoIaG9zdG5hbWUYAiABKAkSEQoJcHJvY2Vzc05vGAMgASgFEg0KBWlwdjRz",
            "GAQgAygJIj4KFVNlcnZpY2VOYW1lQ29sbGVjdGlvbhIlCghlbGVtZW50cxgB",
            "IAMoCzITLlNlcnZpY2VOYW1lRWxlbWVudCJMChxTZXJ2aWNlTmFtZU1hcHBp",
            "bmdDb2xsZWN0aW9uEiwKCGVsZW1lbnRzGAEgAygLMhouU2VydmljZU5hbWVN",
            "YXBwaW5nRWxlbWVudCJUChlTZXJ2aWNlTmFtZU1hcHBpbmdFbGVtZW50EhEK",
            "CXNlcnZpY2VJZBgBIAEoBRIkCgdlbGVtZW50GAIgASgLMhMuU2VydmljZU5h",
            "bWVFbGVtZW50ImAKElNlcnZpY2VOYW1lRWxlbWVudBITCgtzZXJ2aWNlTmFt",
            "ZRgBIAEoCRIVCg1hcHBsaWNhdGlvbklkGAIgASgFEh4KC3NyY1NwYW5UeXBl",
            "GAMgASgOMgkuU3BhblR5cGUyngEKGEluc3RhbmNlRGlzY292ZXJ5U2Vydmlj",
            "ZRJHChByZWdpc3Rlckluc3RhbmNlEhQuQXBwbGljYXRpb25JbnN0YW5jZRob",
            "LkFwcGxpY2F0aW9uSW5zdGFuY2VNYXBwaW5nIgASOQoJaGVhcnRiZWF0Eh0u",
            "QXBwbGljYXRpb25JbnN0YW5jZUhlYXJ0YmVhdBoLLkRvd25zdHJlYW0iADJj",
            "ChtTZXJ2aWNlTmFtZURpc2NvdmVyeVNlcnZpY2USRAoJZGlzY292ZXJ5EhYu",
            "U2VydmljZU5hbWVDb2xsZWN0aW9uGh0uU2VydmljZU5hbWVNYXBwaW5nQ29s",
            "bGVjdGlvbiIAQlEKMG9yZy5hcGFjaGUuc2t5d2Fsa2luZy5hcG0ubmV0d29y",
            "ay5sYW5ndWFnZS5hZ2VudFABqgIaU2t5V2Fsa2luZy5OZXR3b3JrUHJvdG9j",
            "b2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SkyWalking.NetworkProtocol.DownstreamReflection.Descriptor, global::SkyWalking.NetworkProtocol.TraceCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ApplicationInstance), global::SkyWalking.NetworkProtocol.ApplicationInstance.Parser, new[]{ "ApplicationId", "AgentUUID", "RegisterTime", "Osinfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ApplicationInstanceMapping), global::SkyWalking.NetworkProtocol.ApplicationInstanceMapping.Parser, new[]{ "ApplicationId", "ApplicationInstanceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ApplicationInstanceRecover), global::SkyWalking.NetworkProtocol.ApplicationInstanceRecover.Parser, new[]{ "ApplicationId", "ApplicationInstanceId", "RegisterTime", "Osinfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ApplicationInstanceHeartbeat), global::SkyWalking.NetworkProtocol.ApplicationInstanceHeartbeat.Parser, new[]{ "ApplicationInstanceId", "HeartbeatTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.OSInfo), global::SkyWalking.NetworkProtocol.OSInfo.Parser, new[]{ "OsName", "Hostname", "ProcessNo", "Ipv4S" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ServiceNameCollection), global::SkyWalking.NetworkProtocol.ServiceNameCollection.Parser, new[]{ "Elements" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ServiceNameMappingCollection), global::SkyWalking.NetworkProtocol.ServiceNameMappingCollection.Parser, new[]{ "Elements" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ServiceNameMappingElement), global::SkyWalking.NetworkProtocol.ServiceNameMappingElement.Parser, new[]{ "ServiceId", "Element" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ServiceNameElement), global::SkyWalking.NetworkProtocol.ServiceNameElement.Parser, new[]{ "ServiceName", "ApplicationId", "SrcSpanType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ApplicationInstance : pb::IMessage<ApplicationInstance> {
    private static readonly pb::MessageParser<ApplicationInstance> _parser = new pb::MessageParser<ApplicationInstance>(() => new ApplicationInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplicationInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.DiscoveryServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstance(ApplicationInstance other) : this() {
      applicationId_ = other.applicationId_;
      agentUUID_ = other.agentUUID_;
      registerTime_ = other.registerTime_;
      osinfo_ = other.osinfo_ != null ? other.osinfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstance Clone() {
      return new ApplicationInstance(this);
    }

    /// <summary>Field number for the "applicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "agentUUID" field.</summary>
    public const int AgentUUIDFieldNumber = 2;
    private string agentUUID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgentUUID {
      get { return agentUUID_; }
      set {
        agentUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registerTime" field.</summary>
    public const int RegisterTimeFieldNumber = 3;
    private long registerTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RegisterTime {
      get { return registerTime_; }
      set {
        registerTime_ = value;
      }
    }

    /// <summary>Field number for the "osinfo" field.</summary>
    public const int OsinfoFieldNumber = 4;
    private global::SkyWalking.NetworkProtocol.OSInfo osinfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.OSInfo Osinfo {
      get { return osinfo_; }
      set {
        osinfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplicationInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplicationInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (AgentUUID != other.AgentUUID) return false;
      if (RegisterTime != other.RegisterTime) return false;
      if (!object.Equals(Osinfo, other.Osinfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (AgentUUID.Length != 0) hash ^= AgentUUID.GetHashCode();
      if (RegisterTime != 0L) hash ^= RegisterTime.GetHashCode();
      if (osinfo_ != null) hash ^= Osinfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ApplicationId);
      }
      if (AgentUUID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AgentUUID);
      }
      if (RegisterTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RegisterTime);
      }
      if (osinfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Osinfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (AgentUUID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AgentUUID);
      }
      if (RegisterTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RegisterTime);
      }
      if (osinfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Osinfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplicationInstance other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.AgentUUID.Length != 0) {
        AgentUUID = other.AgentUUID;
      }
      if (other.RegisterTime != 0L) {
        RegisterTime = other.RegisterTime;
      }
      if (other.osinfo_ != null) {
        if (osinfo_ == null) {
          Osinfo = new global::SkyWalking.NetworkProtocol.OSInfo();
        }
        Osinfo.MergeFrom(other.Osinfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 18: {
            AgentUUID = input.ReadString();
            break;
          }
          case 24: {
            RegisterTime = input.ReadInt64();
            break;
          }
          case 34: {
            if (osinfo_ == null) {
              Osinfo = new global::SkyWalking.NetworkProtocol.OSInfo();
            }
            input.ReadMessage(Osinfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplicationInstanceMapping : pb::IMessage<ApplicationInstanceMapping> {
    private static readonly pb::MessageParser<ApplicationInstanceMapping> _parser = new pb::MessageParser<ApplicationInstanceMapping>(() => new ApplicationInstanceMapping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplicationInstanceMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.DiscoveryServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstanceMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstanceMapping(ApplicationInstanceMapping other) : this() {
      applicationId_ = other.applicationId_;
      applicationInstanceId_ = other.applicationInstanceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstanceMapping Clone() {
      return new ApplicationInstanceMapping(this);
    }

    /// <summary>Field number for the "applicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "applicationInstanceId" field.</summary>
    public const int ApplicationInstanceIdFieldNumber = 2;
    private int applicationInstanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationInstanceId {
      get { return applicationInstanceId_; }
      set {
        applicationInstanceId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplicationInstanceMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplicationInstanceMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ApplicationInstanceId != other.ApplicationInstanceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (ApplicationInstanceId != 0) hash ^= ApplicationInstanceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ApplicationId);
      }
      if (ApplicationInstanceId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationInstanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (ApplicationInstanceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationInstanceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplicationInstanceMapping other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ApplicationInstanceId != 0) {
        ApplicationInstanceId = other.ApplicationInstanceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationInstanceId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplicationInstanceRecover : pb::IMessage<ApplicationInstanceRecover> {
    private static readonly pb::MessageParser<ApplicationInstanceRecover> _parser = new pb::MessageParser<ApplicationInstanceRecover>(() => new ApplicationInstanceRecover());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplicationInstanceRecover> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.DiscoveryServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstanceRecover() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstanceRecover(ApplicationInstanceRecover other) : this() {
      applicationId_ = other.applicationId_;
      applicationInstanceId_ = other.applicationInstanceId_;
      registerTime_ = other.registerTime_;
      osinfo_ = other.osinfo_ != null ? other.osinfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstanceRecover Clone() {
      return new ApplicationInstanceRecover(this);
    }

    /// <summary>Field number for the "applicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "applicationInstanceId" field.</summary>
    public const int ApplicationInstanceIdFieldNumber = 2;
    private int applicationInstanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationInstanceId {
      get { return applicationInstanceId_; }
      set {
        applicationInstanceId_ = value;
      }
    }

    /// <summary>Field number for the "registerTime" field.</summary>
    public const int RegisterTimeFieldNumber = 3;
    private long registerTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RegisterTime {
      get { return registerTime_; }
      set {
        registerTime_ = value;
      }
    }

    /// <summary>Field number for the "osinfo" field.</summary>
    public const int OsinfoFieldNumber = 4;
    private global::SkyWalking.NetworkProtocol.OSInfo osinfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.OSInfo Osinfo {
      get { return osinfo_; }
      set {
        osinfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplicationInstanceRecover);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplicationInstanceRecover other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ApplicationInstanceId != other.ApplicationInstanceId) return false;
      if (RegisterTime != other.RegisterTime) return false;
      if (!object.Equals(Osinfo, other.Osinfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (ApplicationInstanceId != 0) hash ^= ApplicationInstanceId.GetHashCode();
      if (RegisterTime != 0L) hash ^= RegisterTime.GetHashCode();
      if (osinfo_ != null) hash ^= Osinfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ApplicationId);
      }
      if (ApplicationInstanceId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationInstanceId);
      }
      if (RegisterTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RegisterTime);
      }
      if (osinfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Osinfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (ApplicationInstanceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationInstanceId);
      }
      if (RegisterTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RegisterTime);
      }
      if (osinfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Osinfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplicationInstanceRecover other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ApplicationInstanceId != 0) {
        ApplicationInstanceId = other.ApplicationInstanceId;
      }
      if (other.RegisterTime != 0L) {
        RegisterTime = other.RegisterTime;
      }
      if (other.osinfo_ != null) {
        if (osinfo_ == null) {
          Osinfo = new global::SkyWalking.NetworkProtocol.OSInfo();
        }
        Osinfo.MergeFrom(other.Osinfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 16: {
            ApplicationInstanceId = input.ReadInt32();
            break;
          }
          case 24: {
            RegisterTime = input.ReadInt64();
            break;
          }
          case 34: {
            if (osinfo_ == null) {
              Osinfo = new global::SkyWalking.NetworkProtocol.OSInfo();
            }
            input.ReadMessage(Osinfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplicationInstanceHeartbeat : pb::IMessage<ApplicationInstanceHeartbeat> {
    private static readonly pb::MessageParser<ApplicationInstanceHeartbeat> _parser = new pb::MessageParser<ApplicationInstanceHeartbeat>(() => new ApplicationInstanceHeartbeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplicationInstanceHeartbeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.DiscoveryServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstanceHeartbeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstanceHeartbeat(ApplicationInstanceHeartbeat other) : this() {
      applicationInstanceId_ = other.applicationInstanceId_;
      heartbeatTime_ = other.heartbeatTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationInstanceHeartbeat Clone() {
      return new ApplicationInstanceHeartbeat(this);
    }

    /// <summary>Field number for the "applicationInstanceId" field.</summary>
    public const int ApplicationInstanceIdFieldNumber = 1;
    private int applicationInstanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationInstanceId {
      get { return applicationInstanceId_; }
      set {
        applicationInstanceId_ = value;
      }
    }

    /// <summary>Field number for the "heartbeatTime" field.</summary>
    public const int HeartbeatTimeFieldNumber = 2;
    private long heartbeatTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeartbeatTime {
      get { return heartbeatTime_; }
      set {
        heartbeatTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplicationInstanceHeartbeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplicationInstanceHeartbeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationInstanceId != other.ApplicationInstanceId) return false;
      if (HeartbeatTime != other.HeartbeatTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationInstanceId != 0) hash ^= ApplicationInstanceId.GetHashCode();
      if (HeartbeatTime != 0L) hash ^= HeartbeatTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationInstanceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ApplicationInstanceId);
      }
      if (HeartbeatTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HeartbeatTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationInstanceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationInstanceId);
      }
      if (HeartbeatTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeartbeatTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplicationInstanceHeartbeat other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationInstanceId != 0) {
        ApplicationInstanceId = other.ApplicationInstanceId;
      }
      if (other.HeartbeatTime != 0L) {
        HeartbeatTime = other.HeartbeatTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationInstanceId = input.ReadInt32();
            break;
          }
          case 16: {
            HeartbeatTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OSInfo : pb::IMessage<OSInfo> {
    private static readonly pb::MessageParser<OSInfo> _parser = new pb::MessageParser<OSInfo>(() => new OSInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OSInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.DiscoveryServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OSInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OSInfo(OSInfo other) : this() {
      osName_ = other.osName_;
      hostname_ = other.hostname_;
      processNo_ = other.processNo_;
      ipv4S_ = other.ipv4S_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OSInfo Clone() {
      return new OSInfo(this);
    }

    /// <summary>Field number for the "osName" field.</summary>
    public const int OsNameFieldNumber = 1;
    private string osName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OsName {
      get { return osName_; }
      set {
        osName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hostname" field.</summary>
    public const int HostnameFieldNumber = 2;
    private string hostname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hostname {
      get { return hostname_; }
      set {
        hostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "processNo" field.</summary>
    public const int ProcessNoFieldNumber = 3;
    private int processNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProcessNo {
      get { return processNo_; }
      set {
        processNo_ = value;
      }
    }

    /// <summary>Field number for the "ipv4s" field.</summary>
    public const int Ipv4SFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_ipv4S_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> ipv4S_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ipv4S {
      get { return ipv4S_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OSInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OSInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OsName != other.OsName) return false;
      if (Hostname != other.Hostname) return false;
      if (ProcessNo != other.ProcessNo) return false;
      if(!ipv4S_.Equals(other.ipv4S_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OsName.Length != 0) hash ^= OsName.GetHashCode();
      if (Hostname.Length != 0) hash ^= Hostname.GetHashCode();
      if (ProcessNo != 0) hash ^= ProcessNo.GetHashCode();
      hash ^= ipv4S_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OsName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OsName);
      }
      if (Hostname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hostname);
      }
      if (ProcessNo != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ProcessNo);
      }
      ipv4S_.WriteTo(output, _repeated_ipv4S_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OsName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OsName);
      }
      if (Hostname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hostname);
      }
      if (ProcessNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessNo);
      }
      size += ipv4S_.CalculateSize(_repeated_ipv4S_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OSInfo other) {
      if (other == null) {
        return;
      }
      if (other.OsName.Length != 0) {
        OsName = other.OsName;
      }
      if (other.Hostname.Length != 0) {
        Hostname = other.Hostname;
      }
      if (other.ProcessNo != 0) {
        ProcessNo = other.ProcessNo;
      }
      ipv4S_.Add(other.ipv4S_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OsName = input.ReadString();
            break;
          }
          case 18: {
            Hostname = input.ReadString();
            break;
          }
          case 24: {
            ProcessNo = input.ReadInt32();
            break;
          }
          case 34: {
            ipv4S_.AddEntriesFrom(input, _repeated_ipv4S_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceNameCollection : pb::IMessage<ServiceNameCollection> {
    private static readonly pb::MessageParser<ServiceNameCollection> _parser = new pb::MessageParser<ServiceNameCollection>(() => new ServiceNameCollection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceNameCollection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.DiscoveryServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameCollection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameCollection(ServiceNameCollection other) : this() {
      elements_ = other.elements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameCollection Clone() {
      return new ServiceNameCollection(this);
    }

    /// <summary>Field number for the "elements" field.</summary>
    public const int ElementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.ServiceNameElement> _repeated_elements_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.ServiceNameElement.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceNameElement> elements_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceNameElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceNameElement> Elements {
      get { return elements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceNameCollection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceNameCollection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elements_.Equals(other.elements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      elements_.WriteTo(output, _repeated_elements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += elements_.CalculateSize(_repeated_elements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceNameCollection other) {
      if (other == null) {
        return;
      }
      elements_.Add(other.elements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elements_.AddEntriesFrom(input, _repeated_elements_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceNameMappingCollection : pb::IMessage<ServiceNameMappingCollection> {
    private static readonly pb::MessageParser<ServiceNameMappingCollection> _parser = new pb::MessageParser<ServiceNameMappingCollection>(() => new ServiceNameMappingCollection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceNameMappingCollection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.DiscoveryServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameMappingCollection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameMappingCollection(ServiceNameMappingCollection other) : this() {
      elements_ = other.elements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameMappingCollection Clone() {
      return new ServiceNameMappingCollection(this);
    }

    /// <summary>Field number for the "elements" field.</summary>
    public const int ElementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.ServiceNameMappingElement> _repeated_elements_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.ServiceNameMappingElement.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceNameMappingElement> elements_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceNameMappingElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceNameMappingElement> Elements {
      get { return elements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceNameMappingCollection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceNameMappingCollection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elements_.Equals(other.elements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      elements_.WriteTo(output, _repeated_elements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += elements_.CalculateSize(_repeated_elements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceNameMappingCollection other) {
      if (other == null) {
        return;
      }
      elements_.Add(other.elements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elements_.AddEntriesFrom(input, _repeated_elements_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceNameMappingElement : pb::IMessage<ServiceNameMappingElement> {
    private static readonly pb::MessageParser<ServiceNameMappingElement> _parser = new pb::MessageParser<ServiceNameMappingElement>(() => new ServiceNameMappingElement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceNameMappingElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.DiscoveryServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameMappingElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameMappingElement(ServiceNameMappingElement other) : this() {
      serviceId_ = other.serviceId_;
      element_ = other.element_ != null ? other.element_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameMappingElement Clone() {
      return new ServiceNameMappingElement(this);
    }

    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 1;
    private int serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }

    /// <summary>Field number for the "element" field.</summary>
    public const int ElementFieldNumber = 2;
    private global::SkyWalking.NetworkProtocol.ServiceNameElement element_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.ServiceNameElement Element {
      get { return element_; }
      set {
        element_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceNameMappingElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceNameMappingElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceId != other.ServiceId) return false;
      if (!object.Equals(Element, other.Element)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceId != 0) hash ^= ServiceId.GetHashCode();
      if (element_ != null) hash ^= Element.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServiceId);
      }
      if (element_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Element);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceId);
      }
      if (element_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Element);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceNameMappingElement other) {
      if (other == null) {
        return;
      }
      if (other.ServiceId != 0) {
        ServiceId = other.ServiceId;
      }
      if (other.element_ != null) {
        if (element_ == null) {
          Element = new global::SkyWalking.NetworkProtocol.ServiceNameElement();
        }
        Element.MergeFrom(other.Element);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServiceId = input.ReadInt32();
            break;
          }
          case 18: {
            if (element_ == null) {
              Element = new global::SkyWalking.NetworkProtocol.ServiceNameElement();
            }
            input.ReadMessage(Element);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceNameElement : pb::IMessage<ServiceNameElement> {
    private static readonly pb::MessageParser<ServiceNameElement> _parser = new pb::MessageParser<ServiceNameElement>(() => new ServiceNameElement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceNameElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.DiscoveryServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameElement(ServiceNameElement other) : this() {
      serviceName_ = other.serviceName_;
      applicationId_ = other.applicationId_;
      srcSpanType_ = other.srcSpanType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceNameElement Clone() {
      return new ServiceNameElement(this);
    }

    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "applicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 2;
    private int applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "srcSpanType" field.</summary>
    public const int SrcSpanTypeFieldNumber = 3;
    private global::SkyWalking.NetworkProtocol.SpanType srcSpanType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.SpanType SrcSpanType {
      get { return srcSpanType_; }
      set {
        srcSpanType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceNameElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceNameElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (ApplicationId != other.ApplicationId) return false;
      if (SrcSpanType != other.SrcSpanType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (ApplicationId != 0) hash ^= ApplicationId.GetHashCode();
      if (SrcSpanType != 0) hash ^= SrcSpanType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (ApplicationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApplicationId);
      }
      if (SrcSpanType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SrcSpanType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (ApplicationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplicationId);
      }
      if (SrcSpanType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SrcSpanType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceNameElement other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.ApplicationId != 0) {
        ApplicationId = other.ApplicationId;
      }
      if (other.SrcSpanType != 0) {
        SrcSpanType = other.SrcSpanType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 16: {
            ApplicationId = input.ReadInt32();
            break;
          }
          case 24: {
            SrcSpanType = (global::SkyWalking.NetworkProtocol.SpanType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
