// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: register/Register.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SkyWalking.NetworkProtocol {

  /// <summary>Holder for reflection information generated from register/Register.proto</summary>
  public static partial class RegisterReflection {

    #region Descriptor
    /// <summary>File descriptor for register/Register.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RegisterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdyZWdpc3Rlci9SZWdpc3Rlci5wcm90bxoTY29tbW9uL2NvbW1vbi5wcm90",
            "byImCghTZXJ2aWNlcxIaCghzZXJ2aWNlcxgBIAMoCzIILlNlcnZpY2UiagoH",
            "U2VydmljZRITCgtzZXJ2aWNlTmFtZRgBIAEoCRIhCgR0YWdzGAMgAygLMhMu",
            "S2V5U3RyaW5nVmFsdWVQYWlyEicKCnByb3BlcnRpZXMYBCADKAsyEy5LZXlT",
            "dHJpbmdWYWx1ZVBhaXIiPAoWU2VydmljZVJlZ2lzdGVyTWFwcGluZxIiCghz",
            "ZXJ2aWNlcxgBIAMoCzIQLktleUludFZhbHVlUGFpciI3ChBTZXJ2aWNlSW5z",
            "dGFuY2VzEiMKCWluc3RhbmNlcxgBIAMoCzIQLlNlcnZpY2VJbnN0YW5jZSKU",
            "AQoPU2VydmljZUluc3RhbmNlEhEKCXNlcnZpY2VJZBgBIAEoBRIUCgxpbnN0",
            "YW5jZVVVSUQYAiABKAkSDAoEdGltZRgDIAEoAxIhCgR0YWdzGAQgAygLMhMu",
            "S2V5U3RyaW5nVmFsdWVQYWlyEicKCnByb3BlcnRpZXMYBSADKAsyEy5LZXlT",
            "dHJpbmdWYWx1ZVBhaXIiTAoeU2VydmljZUluc3RhbmNlUmVnaXN0ZXJNYXBw",
            "aW5nEioKEHNlcnZpY2VJbnN0YW5jZXMYASADKAsyEC5LZXlJbnRWYWx1ZVBh",
            "aXIiIQoMTmV0QWRkcmVzc2VzEhEKCWFkZHJlc3NlcxgBIAMoCSI5ChFOZXRB",
            "ZGRyZXNzTWFwcGluZxIkCgphZGRyZXNzSWRzGAEgAygLMhAuS2V5SW50VmFs",
            "dWVQYWlyIigKCEVucG9pbnRzEhwKCWVuZHBvaW50cxgBIAMoCzIJLkVuZHBv",
            "aW50IpsBCghFbmRwb2ludBIRCglzZXJ2aWNlSWQYASABKAUSFAoMZW5kcG9p",
            "bnROYW1lGAIgASgJEiEKBHRhZ3MYAyADKAsyEy5LZXlTdHJpbmdWYWx1ZVBh",
            "aXISJwoKcHJvcGVydGllcxgEIAMoCzITLktleVN0cmluZ1ZhbHVlUGFpchIa",
            "CgRmcm9tGAUgASgOMgwuRGV0ZWN0UG9pbnQiPAoPRW5kcG9pbnRNYXBwaW5n",
            "EikKCGVsZW1lbnRzGAEgAygLMhcuRW5kcG9pbnRNYXBwaW5nRWxlbWVudCJx",
            "ChZFbmRwb2ludE1hcHBpbmdFbGVtZW50EhEKCXNlcnZpY2VJZBgBIAEoBRIU",
            "CgxlbmRwb2ludE5hbWUYAiABKAkSEgoKZW5kcG9pbnRJZBgDIAEoBRIaCgRm",
            "cm9tGAQgASgOMgwuRGV0ZWN0UG9pbnQiVgogU2VydmljZUFuZE5ldHdvcmtB",
            "ZGRyZXNzTWFwcGluZ3MSMgoIbWFwcGluZ3MYASADKAsyIC5TZXJ2aWNlQW5k",
            "TmV0d29ya0FkZHJlc3NNYXBwaW5nIoEBCh9TZXJ2aWNlQW5kTmV0d29ya0Fk",
            "ZHJlc3NNYXBwaW5nEhEKCXNlcnZpY2VJZBgBIAEoBRIZChFzZXJ2aWNlSW5z",
            "dGFuY2VJZBgCIAEoBRIWCg5uZXR3b3JrQWRkcmVzcxgDIAEoCRIYChBuZXR3",
            "b3JrQWRkcmVzc0lkGAQgASgFMusCCghSZWdpc3RlchI5ChFkb1NlcnZpY2VS",
            "ZWdpc3RlchIJLlNlcnZpY2VzGhcuU2VydmljZVJlZ2lzdGVyTWFwcGluZyIA",
            "ElEKGWRvU2VydmljZUluc3RhbmNlUmVnaXN0ZXISES5TZXJ2aWNlSW5zdGFu",
            "Y2VzGh8uU2VydmljZUluc3RhbmNlUmVnaXN0ZXJNYXBwaW5nIgASMwoSZG9F",
            "bmRwb2ludFJlZ2lzdGVyEgkuRW5wb2ludHMaEC5FbmRwb2ludE1hcHBpbmci",
            "ABI/Chhkb05ldHdvcmtBZGRyZXNzUmVnaXN0ZXISDS5OZXRBZGRyZXNzZXMa",
            "Ei5OZXRBZGRyZXNzTWFwcGluZyIAElsKKWRvU2VydmljZUFuZE5ldHdvcmtB",
            "ZGRyZXNzTWFwcGluZ1JlZ2lzdGVyEiEuU2VydmljZUFuZE5ldHdvcmtBZGRy",
            "ZXNzTWFwcGluZ3MaCS5Db21tYW5kcyIAQk4KLW9yZy5hcGFjaGUuc2t5d2Fs",
            "a2luZy5hcG0ubmV0d29yay5yZWdpc3Rlci52MlABqgIaU2t5V2Fsa2luZy5O",
            "ZXR3b3JrUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SkyWalking.NetworkProtocol.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.Services), global::SkyWalking.NetworkProtocol.Services.Parser, new[]{ "Services_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.Service), global::SkyWalking.NetworkProtocol.Service.Parser, new[]{ "ServiceName", "Tags", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ServiceRegisterMapping), global::SkyWalking.NetworkProtocol.ServiceRegisterMapping.Parser, new[]{ "Services" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ServiceInstances), global::SkyWalking.NetworkProtocol.ServiceInstances.Parser, new[]{ "Instances" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ServiceInstance), global::SkyWalking.NetworkProtocol.ServiceInstance.Parser, new[]{ "ServiceId", "InstanceUUID", "Time", "Tags", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ServiceInstanceRegisterMapping), global::SkyWalking.NetworkProtocol.ServiceInstanceRegisterMapping.Parser, new[]{ "ServiceInstances" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.NetAddresses), global::SkyWalking.NetworkProtocol.NetAddresses.Parser, new[]{ "Addresses" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.NetAddressMapping), global::SkyWalking.NetworkProtocol.NetAddressMapping.Parser, new[]{ "AddressIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.Enpoints), global::SkyWalking.NetworkProtocol.Enpoints.Parser, new[]{ "Endpoints" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.Endpoint), global::SkyWalking.NetworkProtocol.Endpoint.Parser, new[]{ "ServiceId", "EndpointName", "Tags", "Properties", "From" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.EndpointMapping), global::SkyWalking.NetworkProtocol.EndpointMapping.Parser, new[]{ "Elements" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.EndpointMappingElement), global::SkyWalking.NetworkProtocol.EndpointMappingElement.Parser, new[]{ "ServiceId", "EndpointName", "EndpointId", "From" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ServiceAndNetworkAddressMappings), global::SkyWalking.NetworkProtocol.ServiceAndNetworkAddressMappings.Parser, new[]{ "Mappings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SkyWalking.NetworkProtocol.ServiceAndNetworkAddressMapping), global::SkyWalking.NetworkProtocol.ServiceAndNetworkAddressMapping.Parser, new[]{ "ServiceId", "ServiceInstanceId", "NetworkAddress", "NetworkAddressId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Service register
  /// </summary>
  public sealed partial class Services : pb::IMessage<Services> {
    private static readonly pb::MessageParser<Services> _parser = new pb::MessageParser<Services>(() => new Services());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Services> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Services() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Services(Services other) : this() {
      services_ = other.services_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Services Clone() {
      return new Services(this);
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int Services_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.Service> _repeated_services_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.Service.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.Service> services_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.Service>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.Service> Services_ {
      get { return services_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Services);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Services other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!services_.Equals(other.services_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= services_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      services_.WriteTo(output, _repeated_services_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += services_.CalculateSize(_repeated_services_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Services other) {
      if (other == null) {
        return;
      }
      services_.Add(other.services_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Service : pb::IMessage<Service> {
    private static readonly pb::MessageParser<Service> _parser = new pb::MessageParser<Service>(() => new Service());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Service> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service(Service other) : this() {
      serviceName_ = other.serviceName_;
      tags_ = other.tags_.Clone();
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service Clone() {
      return new Service(this);
    }

    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.KeyStringValuePair> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(26, global::SkyWalking.NetworkProtocol.KeyStringValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> tags_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.KeyStringValuePair> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(34, global::SkyWalking.NetworkProtocol.KeyStringValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> properties_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Service);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Service other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Service other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      tags_.Add(other.tags_);
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 34: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceRegisterMapping : pb::IMessage<ServiceRegisterMapping> {
    private static readonly pb::MessageParser<ServiceRegisterMapping> _parser = new pb::MessageParser<ServiceRegisterMapping>(() => new ServiceRegisterMapping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceRegisterMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceRegisterMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceRegisterMapping(ServiceRegisterMapping other) : this() {
      services_ = other.services_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceRegisterMapping Clone() {
      return new ServiceRegisterMapping(this);
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.KeyIntValuePair> _repeated_services_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.KeyIntValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyIntValuePair> services_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyIntValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyIntValuePair> Services {
      get { return services_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceRegisterMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceRegisterMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!services_.Equals(other.services_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= services_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      services_.WriteTo(output, _repeated_services_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += services_.CalculateSize(_repeated_services_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceRegisterMapping other) {
      if (other == null) {
        return;
      }
      services_.Add(other.services_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Service Instance register
  /// </summary>
  public sealed partial class ServiceInstances : pb::IMessage<ServiceInstances> {
    private static readonly pb::MessageParser<ServiceInstances> _parser = new pb::MessageParser<ServiceInstances>(() => new ServiceInstances());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceInstances> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInstances() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInstances(ServiceInstances other) : this() {
      instances_ = other.instances_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInstances Clone() {
      return new ServiceInstances(this);
    }

    /// <summary>Field number for the "instances" field.</summary>
    public const int InstancesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.ServiceInstance> _repeated_instances_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.ServiceInstance.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceInstance> instances_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceInstance> Instances {
      get { return instances_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceInstances);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceInstances other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!instances_.Equals(other.instances_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= instances_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      instances_.WriteTo(output, _repeated_instances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += instances_.CalculateSize(_repeated_instances_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceInstances other) {
      if (other == null) {
        return;
      }
      instances_.Add(other.instances_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            instances_.AddEntriesFrom(input, _repeated_instances_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceInstance : pb::IMessage<ServiceInstance> {
    private static readonly pb::MessageParser<ServiceInstance> _parser = new pb::MessageParser<ServiceInstance>(() => new ServiceInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInstance(ServiceInstance other) : this() {
      serviceId_ = other.serviceId_;
      instanceUUID_ = other.instanceUUID_;
      time_ = other.time_;
      tags_ = other.tags_.Clone();
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInstance Clone() {
      return new ServiceInstance(this);
    }

    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 1;
    private int serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }

    /// <summary>Field number for the "instanceUUID" field.</summary>
    public const int InstanceUUIDFieldNumber = 2;
    private string instanceUUID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceUUID {
      get { return instanceUUID_; }
      set {
        instanceUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private long time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.KeyStringValuePair> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(34, global::SkyWalking.NetworkProtocol.KeyStringValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> tags_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.KeyStringValuePair> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(42, global::SkyWalking.NetworkProtocol.KeyStringValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> properties_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceId != other.ServiceId) return false;
      if (InstanceUUID != other.InstanceUUID) return false;
      if (Time != other.Time) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceId != 0) hash ^= ServiceId.GetHashCode();
      if (InstanceUUID.Length != 0) hash ^= InstanceUUID.GetHashCode();
      if (Time != 0L) hash ^= Time.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServiceId);
      }
      if (InstanceUUID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstanceUUID);
      }
      if (Time != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Time);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceId);
      }
      if (InstanceUUID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceUUID);
      }
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceInstance other) {
      if (other == null) {
        return;
      }
      if (other.ServiceId != 0) {
        ServiceId = other.ServiceId;
      }
      if (other.InstanceUUID.Length != 0) {
        InstanceUUID = other.InstanceUUID;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      tags_.Add(other.tags_);
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServiceId = input.ReadInt32();
            break;
          }
          case 18: {
            InstanceUUID = input.ReadString();
            break;
          }
          case 24: {
            Time = input.ReadInt64();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceInstanceRegisterMapping : pb::IMessage<ServiceInstanceRegisterMapping> {
    private static readonly pb::MessageParser<ServiceInstanceRegisterMapping> _parser = new pb::MessageParser<ServiceInstanceRegisterMapping>(() => new ServiceInstanceRegisterMapping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceInstanceRegisterMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInstanceRegisterMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInstanceRegisterMapping(ServiceInstanceRegisterMapping other) : this() {
      serviceInstances_ = other.serviceInstances_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInstanceRegisterMapping Clone() {
      return new ServiceInstanceRegisterMapping(this);
    }

    /// <summary>Field number for the "serviceInstances" field.</summary>
    public const int ServiceInstancesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.KeyIntValuePair> _repeated_serviceInstances_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.KeyIntValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyIntValuePair> serviceInstances_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyIntValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyIntValuePair> ServiceInstances {
      get { return serviceInstances_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceInstanceRegisterMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceInstanceRegisterMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serviceInstances_.Equals(other.serviceInstances_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serviceInstances_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      serviceInstances_.WriteTo(output, _repeated_serviceInstances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serviceInstances_.CalculateSize(_repeated_serviceInstances_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceInstanceRegisterMapping other) {
      if (other == null) {
        return;
      }
      serviceInstances_.Add(other.serviceInstances_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            serviceInstances_.AddEntriesFrom(input, _repeated_serviceInstances_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Only known use case is the language agent.
  /// Network address represents the ip/hostname:port, which is usually used at client side of RPC.
  /// </summary>
  public sealed partial class NetAddresses : pb::IMessage<NetAddresses> {
    private static readonly pb::MessageParser<NetAddresses> _parser = new pb::MessageParser<NetAddresses>(() => new NetAddresses());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetAddresses> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetAddresses() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetAddresses(NetAddresses other) : this() {
      addresses_ = other.addresses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetAddresses Clone() {
      return new NetAddresses(this);
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_addresses_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> addresses_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Addresses {
      get { return addresses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetAddresses);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetAddresses other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addresses_.Equals(other.addresses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addresses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addresses_.WriteTo(output, _repeated_addresses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addresses_.CalculateSize(_repeated_addresses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetAddresses other) {
      if (other == null) {
        return;
      }
      addresses_.Add(other.addresses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addresses_.AddEntriesFrom(input, _repeated_addresses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetAddressMapping : pb::IMessage<NetAddressMapping> {
    private static readonly pb::MessageParser<NetAddressMapping> _parser = new pb::MessageParser<NetAddressMapping>(() => new NetAddressMapping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetAddressMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetAddressMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetAddressMapping(NetAddressMapping other) : this() {
      addressIds_ = other.addressIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetAddressMapping Clone() {
      return new NetAddressMapping(this);
    }

    /// <summary>Field number for the "addressIds" field.</summary>
    public const int AddressIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.KeyIntValuePair> _repeated_addressIds_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.KeyIntValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyIntValuePair> addressIds_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyIntValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyIntValuePair> AddressIds {
      get { return addressIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetAddressMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetAddressMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addressIds_.Equals(other.addressIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addressIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addressIds_.WriteTo(output, _repeated_addressIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addressIds_.CalculateSize(_repeated_addressIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetAddressMapping other) {
      if (other == null) {
        return;
      }
      addressIds_.Add(other.addressIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addressIds_.AddEntriesFrom(input, _repeated_addressIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Endpint register
  /// </summary>
  public sealed partial class Enpoints : pb::IMessage<Enpoints> {
    private static readonly pb::MessageParser<Enpoints> _parser = new pb::MessageParser<Enpoints>(() => new Enpoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Enpoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enpoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enpoints(Enpoints other) : this() {
      endpoints_ = other.endpoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Enpoints Clone() {
      return new Enpoints(this);
    }

    /// <summary>Field number for the "endpoints" field.</summary>
    public const int EndpointsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.Endpoint> _repeated_endpoints_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.Endpoint.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.Endpoint> endpoints_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.Endpoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.Endpoint> Endpoints {
      get { return endpoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Enpoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Enpoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!endpoints_.Equals(other.endpoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= endpoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      endpoints_.WriteTo(output, _repeated_endpoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endpoints_.CalculateSize(_repeated_endpoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Enpoints other) {
      if (other == null) {
        return;
      }
      endpoints_.Add(other.endpoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endpoints_.AddEntriesFrom(input, _repeated_endpoints_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Endpoint : pb::IMessage<Endpoint> {
    private static readonly pb::MessageParser<Endpoint> _parser = new pb::MessageParser<Endpoint>(() => new Endpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Endpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint(Endpoint other) : this() {
      serviceId_ = other.serviceId_;
      endpointName_ = other.endpointName_;
      tags_ = other.tags_.Clone();
      properties_ = other.properties_.Clone();
      from_ = other.from_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint Clone() {
      return new Endpoint(this);
    }

    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 1;
    private int serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }

    /// <summary>Field number for the "endpointName" field.</summary>
    public const int EndpointNameFieldNumber = 2;
    private string endpointName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndpointName {
      get { return endpointName_; }
      set {
        endpointName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.KeyStringValuePair> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(26, global::SkyWalking.NetworkProtocol.KeyStringValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> tags_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.KeyStringValuePair> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(34, global::SkyWalking.NetworkProtocol.KeyStringValuePair.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> properties_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.KeyStringValuePair> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 5;
    private global::SkyWalking.NetworkProtocol.DetectPoint from_ = 0;
    /// <summary>
    /// For endpoint
    /// from DetectPoint is either `client` or `server`. No chance to be `proxy`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.DetectPoint From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Endpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Endpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceId != other.ServiceId) return false;
      if (EndpointName != other.EndpointName) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      if (From != other.From) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceId != 0) hash ^= ServiceId.GetHashCode();
      if (EndpointName.Length != 0) hash ^= EndpointName.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (From != 0) hash ^= From.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServiceId);
      }
      if (EndpointName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EndpointName);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      properties_.WriteTo(output, _repeated_properties_codec);
      if (From != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) From);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceId);
      }
      if (EndpointName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndpointName);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (From != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) From);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Endpoint other) {
      if (other == null) {
        return;
      }
      if (other.ServiceId != 0) {
        ServiceId = other.ServiceId;
      }
      if (other.EndpointName.Length != 0) {
        EndpointName = other.EndpointName;
      }
      tags_.Add(other.tags_);
      properties_.Add(other.properties_);
      if (other.From != 0) {
        From = other.From;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServiceId = input.ReadInt32();
            break;
          }
          case 18: {
            EndpointName = input.ReadString();
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 34: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
          case 40: {
            From = (global::SkyWalking.NetworkProtocol.DetectPoint) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EndpointMapping : pb::IMessage<EndpointMapping> {
    private static readonly pb::MessageParser<EndpointMapping> _parser = new pb::MessageParser<EndpointMapping>(() => new EndpointMapping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndpointMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndpointMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndpointMapping(EndpointMapping other) : this() {
      elements_ = other.elements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndpointMapping Clone() {
      return new EndpointMapping(this);
    }

    /// <summary>Field number for the "elements" field.</summary>
    public const int ElementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.EndpointMappingElement> _repeated_elements_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.EndpointMappingElement.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.EndpointMappingElement> elements_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.EndpointMappingElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.EndpointMappingElement> Elements {
      get { return elements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndpointMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndpointMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elements_.Equals(other.elements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      elements_.WriteTo(output, _repeated_elements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += elements_.CalculateSize(_repeated_elements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndpointMapping other) {
      if (other == null) {
        return;
      }
      elements_.Add(other.elements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elements_.AddEntriesFrom(input, _repeated_elements_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EndpointMappingElement : pb::IMessage<EndpointMappingElement> {
    private static readonly pb::MessageParser<EndpointMappingElement> _parser = new pb::MessageParser<EndpointMappingElement>(() => new EndpointMappingElement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndpointMappingElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndpointMappingElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndpointMappingElement(EndpointMappingElement other) : this() {
      serviceId_ = other.serviceId_;
      endpointName_ = other.endpointName_;
      endpointId_ = other.endpointId_;
      from_ = other.from_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndpointMappingElement Clone() {
      return new EndpointMappingElement(this);
    }

    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 1;
    private int serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }

    /// <summary>Field number for the "endpointName" field.</summary>
    public const int EndpointNameFieldNumber = 2;
    private string endpointName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndpointName {
      get { return endpointName_; }
      set {
        endpointName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endpointId" field.</summary>
    public const int EndpointIdFieldNumber = 3;
    private int endpointId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndpointId {
      get { return endpointId_; }
      set {
        endpointId_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 4;
    private global::SkyWalking.NetworkProtocol.DetectPoint from_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SkyWalking.NetworkProtocol.DetectPoint From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndpointMappingElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndpointMappingElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceId != other.ServiceId) return false;
      if (EndpointName != other.EndpointName) return false;
      if (EndpointId != other.EndpointId) return false;
      if (From != other.From) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceId != 0) hash ^= ServiceId.GetHashCode();
      if (EndpointName.Length != 0) hash ^= EndpointName.GetHashCode();
      if (EndpointId != 0) hash ^= EndpointId.GetHashCode();
      if (From != 0) hash ^= From.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServiceId);
      }
      if (EndpointName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EndpointName);
      }
      if (EndpointId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EndpointId);
      }
      if (From != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) From);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceId);
      }
      if (EndpointName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndpointName);
      }
      if (EndpointId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndpointId);
      }
      if (From != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) From);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndpointMappingElement other) {
      if (other == null) {
        return;
      }
      if (other.ServiceId != 0) {
        ServiceId = other.ServiceId;
      }
      if (other.EndpointName.Length != 0) {
        EndpointName = other.EndpointName;
      }
      if (other.EndpointId != 0) {
        EndpointId = other.EndpointId;
      }
      if (other.From != 0) {
        From = other.From;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServiceId = input.ReadInt32();
            break;
          }
          case 18: {
            EndpointName = input.ReadString();
            break;
          }
          case 24: {
            EndpointId = input.ReadInt32();
            break;
          }
          case 32: {
            From = (global::SkyWalking.NetworkProtocol.DetectPoint) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceAndNetworkAddressMappings : pb::IMessage<ServiceAndNetworkAddressMappings> {
    private static readonly pb::MessageParser<ServiceAndNetworkAddressMappings> _parser = new pb::MessageParser<ServiceAndNetworkAddressMappings>(() => new ServiceAndNetworkAddressMappings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceAndNetworkAddressMappings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAndNetworkAddressMappings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAndNetworkAddressMappings(ServiceAndNetworkAddressMappings other) : this() {
      mappings_ = other.mappings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAndNetworkAddressMappings Clone() {
      return new ServiceAndNetworkAddressMappings(this);
    }

    /// <summary>Field number for the "mappings" field.</summary>
    public const int MappingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SkyWalking.NetworkProtocol.ServiceAndNetworkAddressMapping> _repeated_mappings_codec
        = pb::FieldCodec.ForMessage(10, global::SkyWalking.NetworkProtocol.ServiceAndNetworkAddressMapping.Parser);
    private readonly pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceAndNetworkAddressMapping> mappings_ = new pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceAndNetworkAddressMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SkyWalking.NetworkProtocol.ServiceAndNetworkAddressMapping> Mappings {
      get { return mappings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceAndNetworkAddressMappings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceAndNetworkAddressMappings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mappings_.Equals(other.mappings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mappings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mappings_.WriteTo(output, _repeated_mappings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mappings_.CalculateSize(_repeated_mappings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceAndNetworkAddressMappings other) {
      if (other == null) {
        return;
      }
      mappings_.Add(other.mappings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mappings_.AddEntriesFrom(input, _repeated_mappings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceAndNetworkAddressMapping : pb::IMessage<ServiceAndNetworkAddressMapping> {
    private static readonly pb::MessageParser<ServiceAndNetworkAddressMapping> _parser = new pb::MessageParser<ServiceAndNetworkAddressMapping>(() => new ServiceAndNetworkAddressMapping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceAndNetworkAddressMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SkyWalking.NetworkProtocol.RegisterReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAndNetworkAddressMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAndNetworkAddressMapping(ServiceAndNetworkAddressMapping other) : this() {
      serviceId_ = other.serviceId_;
      serviceInstanceId_ = other.serviceInstanceId_;
      networkAddress_ = other.networkAddress_;
      networkAddressId_ = other.networkAddressId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAndNetworkAddressMapping Clone() {
      return new ServiceAndNetworkAddressMapping(this);
    }

    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 1;
    private int serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }

    /// <summary>Field number for the "serviceInstanceId" field.</summary>
    public const int ServiceInstanceIdFieldNumber = 2;
    private int serviceInstanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceInstanceId {
      get { return serviceInstanceId_; }
      set {
        serviceInstanceId_ = value;
      }
    }

    /// <summary>Field number for the "networkAddress" field.</summary>
    public const int NetworkAddressFieldNumber = 3;
    private string networkAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkAddress {
      get { return networkAddress_; }
      set {
        networkAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "networkAddressId" field.</summary>
    public const int NetworkAddressIdFieldNumber = 4;
    private int networkAddressId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NetworkAddressId {
      get { return networkAddressId_; }
      set {
        networkAddressId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceAndNetworkAddressMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceAndNetworkAddressMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceId != other.ServiceId) return false;
      if (ServiceInstanceId != other.ServiceInstanceId) return false;
      if (NetworkAddress != other.NetworkAddress) return false;
      if (NetworkAddressId != other.NetworkAddressId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceId != 0) hash ^= ServiceId.GetHashCode();
      if (ServiceInstanceId != 0) hash ^= ServiceInstanceId.GetHashCode();
      if (NetworkAddress.Length != 0) hash ^= NetworkAddress.GetHashCode();
      if (NetworkAddressId != 0) hash ^= NetworkAddressId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ServiceId);
      }
      if (ServiceInstanceId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ServiceInstanceId);
      }
      if (NetworkAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NetworkAddress);
      }
      if (NetworkAddressId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NetworkAddressId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceId);
      }
      if (ServiceInstanceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceInstanceId);
      }
      if (NetworkAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkAddress);
      }
      if (NetworkAddressId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetworkAddressId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceAndNetworkAddressMapping other) {
      if (other == null) {
        return;
      }
      if (other.ServiceId != 0) {
        ServiceId = other.ServiceId;
      }
      if (other.ServiceInstanceId != 0) {
        ServiceInstanceId = other.ServiceInstanceId;
      }
      if (other.NetworkAddress.Length != 0) {
        NetworkAddress = other.NetworkAddress;
      }
      if (other.NetworkAddressId != 0) {
        NetworkAddressId = other.NetworkAddressId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServiceId = input.ReadInt32();
            break;
          }
          case 16: {
            ServiceInstanceId = input.ReadInt32();
            break;
          }
          case 26: {
            NetworkAddress = input.ReadString();
            break;
          }
          case 32: {
            NetworkAddressId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
